[COMMON]
# ---------------------------------------------------------------
# This section is used configure common settings of DroneBridge ground and UAV
# ---------------------------------------------------------------

# the following frequencies are supported:
# 2412, 2417, 2422, 2427, 2432, 2437, 2442, 2447, 2452, 2457, 2462, 2467, 2472, 2484 (Ralink and Atheros)
# 2312, 2317, 2322, 2327, 2332, 2337, 2342, 2347, 2352, 2357, 2362, 2367, 2372, 2377, 2382, 2387, 2392, 2397, 2402, 2407 (Atheros only)
# 2477, 2482, 2487, 2489, 2492, 2494, 2497, 2499, 2512, 2532, 2572, 2592, 2612, 2632, 2652, 2672, 2692, 2712 (Atheros only)
#
# 5180, 5200, 5220, 5240, 5260, 5280, 5300, 5320
# 5500, 5520, 5540, 5560, 5580, 5600, 5620, 5640, 5660, 5680, 5700
# 5745, 5765, 5785, 5805, 5825
#
# 2.3Ghz and 2.5-2.7Ghz band only works with Atheros cards. Check your local regulations before transmitting!
# Frequencies higher than 2512MHz work with Atheros, but with a lot lower transmit power and sensitivity and
# thus greatly reduced range.
# Frequency of the long range link if not overwritten in GROUND or AIR section
freq=2472
# CTS protection (use in areas with other wifi networks)
# set to "auto" for automatic detection, "N" to disable, "Y" to enable
cts_protection=auto

# choose a random number. Allowed numbers: 0-255
# has to be the same on drone and groundstation! Acts as a identifier for both and the link.
communication_id=200

# FEC parameters for video module
video_blocks=8
video_fecs=4
video_blocklength=1024
# Video FPS - Choose between 30, 40, 48, 59.9
fps=48

# Uncomment to blacklist a network interface from being changed. Useful if using RPi ZeroW in headless mode and need internal wifi to remain unchanged
# Set to  'wlan0' for RPi Zero or MAC address of adapter to ignore
; blacklist_ap=wlan0

[GROUND]
# ---------------------------------------------------------------
# This section is used configure DroneBridge on the groundstation side
# ---------------------------------------------------------------

# ------- RADIO LINK SETTINGS -------
# -----------------------------------
# Fixed data rate for Atheros cards - with Ralink cards the data rate is set individually for each module (automatically)
# Lower settings yield higher range and vice versa.
# Bitrate in Mbps
datarate=2
# Manually set the frequency of specified wifi adapters [Y|N]
freq_ovr=N
# When freq_ovr=Y - Define the adapter and its frequency that it should use
nic_1=24050f73b574
frq_1=2472
nic_2=24050f73b574
frq_2=2472
nic_3=24050f73b574
frq_3=2472
nic_4=24050f73b574
frq_4=2472

# [auto|manual] Use "auto" if only one wifi stick is connected! We will choose that one for all DB-modules
interface_selection=auto

# If interface_selection=manual
# Interfaces which DroneBridge modules use to communicate with groundstation (manual mode)
# Type in the MAC address of the desired wifi card without the ":"
interface_control=24050f73b574
interface_tel=24050f73b574
interface_video=24050f73b574
interface_comm=24050f73b574
interface_proxy=24050f73b574

# ------- ACTIVATE MODULES -------
# --------------------------------
# enable "Y" or disable "N" DroneBridge modules
en_control=Y
en_video=Y
en_comm=Y
en_plugin=N

# [1|2|5] 1: MSP v1, 2: MSP v2, 5: DroneBridge RC protocol (recommended) 
rc_proto=5
# Allow or prevent [Y|N] overwrite of RC values sent via DroneBridge control module (used by head trackers etc.)
en_rc_overwrite=Y
# Open port on smartphone (app listens on this one - telemetry module)
# If you want to use MAVLink with QGroundControl you can change it to 14550 OR set QGroundControl to port 1604
port_smartphone_ltm=1604
# Smartphone will send its communication messages to this port (on groundstation)
comm_port_local=1605
# UDP port to which the proxy module sends the data received over long range link.
# This port is also the local port used by proxy module to receive packets
proxy_port_local_remote=1607

# Number of Joystick interface for RC (/dev/input/js0 -> 0)
joy_interface=0

# set this to "Y" to enable Wifi Hotspot. Default SSID is "DroneBridge", password is "dronebridge".
# See apconfig.txt for configuration. This will forward the received video and telemetry streams to a
# smartphone/tablet or computer connected to the RX Pi via WiFi.
wifi_ap=Y
#
# Set to "internal" to use the interal Pi3 wifi chip or the MAC address of the USB wifi card you want to use
wifi_ap_if=internal

# set this to "Y" to enable Ethernet hotspot. This will forward the received video and telemetry streams
# to another computer or other device connected to the Raspberry via Ethernet
eth_hotspot=N
# Set this to "raw" to forward a raw h264 stream to 2nd display devices (for FPV_VR app)
# Set to "rtp" to forward RTP h264 stream (for Tower app and gstreamer etc.)
# NOTE: IN THIS RELEASE ONLY RAW FORWARD IS SUPPORTED!
fwd_stream=raw
# UDP port to send video stream to, set to 5000 for FPV_VR/DroneBridge app or 5600 for Mission Planner
fwd_stream_port=5000
# Set to "memory" to use RAMdisk for temporary video/screenshot/telemetry storage. This limits recording time
# to ~12-14 minutes, but is the safe way. If you need longer recording times, use "sdcard", to use the sdcard
# as the temporary video storage. Keep in mind though, that this might introduce video stutter and/or bad blocks,
# SO TEST CAREFULLY BEFORE USING!
# NOTE: IN THIS RELEASE THIS FUNCTION IS UNSUPPORTED!
video_mem=memory



[AIR]
# ---------------------------------------------------------------
# This section is used configure DroneBridge on the UAV side
# ---------------------------------------------------------------

# ------- RADIO LINK SETTINGS -------
# -----------------------------------
# Fixed data rate for Atheros cards - with Ralink cards the data rate is set individually for each module (automatically)
# Lower settings yield higher range and vice versa.
# Bitrate in Mbps
datarate=18
# Manually set the frequency of specified wifi adapters [Y|N]
freq_ovr=N
# When freq_ovr=Y - Define the adapter and its frequency that it should use
nic_1=24050f73b574
frq_1=2472
nic_2=24050f73b574
frq_2=2472
# [auto|manual] Use "auto" if only one wifi stick is connected! We will choose that one for all DB-modules
interface_selection=auto
# If interface_selection=manual
# Interfaces which DroneBridge modules use to communicate with groundstation (manual mode)
interface_control=18a6f716a511
interface_tel=18a6f716a511
interface_video=18a6f716a511
interface_comm=18a6f716a511

# ------- ACTIVATE MODULES -------
# --------------------------------
# enable "Y" or disable "N" DroneBridge modules
en_tel=Y
en_video=Y
en_comm=Y
en_control=Y
en_plugin=N

# ------- VIDEO MODULE UAV (WBC) -------
# --------------------------------------
# Set additional raspivid parameters here
extraparams=-cd H264 -n -fl -ih -pf high -ex sports -mm average -awb horizon
# Lower values mean faster glitch-recovery, but also lower video quality.
# With fps=48 and keyframerate=5, glitches will stay visible for around 100ms in worst case.
# You can set this higher or lower according to your needs. Minimum value is 2.
keyframerate=5
# Camera settings: https://www.raspberrypi.org/documentation/raspbian/applications/camera.md
# V1 cam: 640x480: 48fps, 59.9fps, 1296x730: 30fps, 48fps. 1920x1080: 30fps
# V2 cam: 640x480: 48fps, 59.9fps, 1280x720: 30fps, 48fps, 59.9fps. 1640x922: 30fps, 40fps. 1920x1080: 30fps
width=1280
heigth=720
# set to "auto" for automatic video bitrate measuring. Set to a fixed value in [kBit/s] to disable automatic measuring
video_bitrate=auto
# if video_bitrate above is set to "auto" the video bitrate will be determined
# by measuring the available bitrate and multiplying it with BITRATE_PERCENT
# Depending on channel utilization by other wifi networks you may need to set
# this to a lower value like 60% to avoid a delayed video stream.
# On free channels you may set this to a higher value like 75% to get a higher
# bitrate and thus image quality.
video_channel_util=65

# ------- TELEMETRY MODULE UAV -------
# ------------------------------------
# serial interface used by telemetry module
# set to /dev/serial1 if you connect via USB-VCP | set to /dev/serial0 if you use Pis UART
serial_int_tel=/dev/serial0
# The telemetry protocol used by FC (for telemetry module). Options [auto|ltm|mavlink]
tel_proto=auto
# Serial baud rate set on <serial_int_tel>
# Options are: 2400, 4800, 9600, 19200, 38400, 57600, 115200
baud_tel=9600

# ------- CONTROL MODULE UAV -------
# ------------------------------------
# Serial interface used by control module (MSP/MAVLink up/downlink)
# set to /dev/serial1 if you connect via USB-VCP | set to /dev/serial0 if you use Pis UART
serial_int_cont=/dev/serial1
# Serial baud rate set on <serial_int_cont>
# Options are: 2400, 4800, 9600, 19200, 38400, 57600, 115200
baud_control=115200
# Serial protocol used (by control module) to send RC commands (MSP only) and 
# to communicate with FC in general (settings, missions etc.)
# 1=MSPv1, 2=MSPv2 [iNAV], 3=MAVLink v1, 4=MAVLink v2, 5=MAVLink transparent pass through [recommended for MAVLink]
serial_prot=2
# Over the air long range packet size when serial_prot=5; should be a value of 2^n (n=1,2,3,...)
pass_through_packet_size=64
# MAVLink RC messages are not supported, but you can use SUMD RC instead. You will need an extra serial
# port for this. FTDI adapters can solve that issue. If SUMD is deactivated and serial_prot is MSP the RC
# messages will be sent via MSP (SET_RAW_RC)
# [Y|N] [!experimental!]
enable_sumd_rc=N
serial_int_sumd=/dev/ttyUSB0

[MYCUSTOMSECTION]
# Add as many sections as you like to this file. You can e.g. store the settings for your plugin right inside this conig file.
# To change/request these settings you can use the communication protocol. Just set the keys and section right.
plugin_1_setting=45
